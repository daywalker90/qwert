name: test suite
on: 
    release:
        types: [unpublished]

jobs:
  release:
    name: build release binaries
    strategy:
        fail-fast: false
        matrix:
            os: ["ubuntu-latest, macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: install rust
          uses: dtolnay/rust-toolchain@stable
        - name: install cross
          run: |
            cargo install cross --git https://github.com/cross-rs/cross
        - name: build unix
          if: contains(matrix.os, 'ubuntu')
          run: |
            cross build --profile optimized --locked --target x86_64-unknown-linux-gnu
            cross build --profile optimized --locked --target armv7-unknown-linux-gnueabihf
            cross build --profile optimized --locked --target aarch64-unknown-linux-gnu
            tar -czf "qwert-${{ github.event.release.tag_name }}-aarch64-linux-gnu.tar.gz" --transform 's|.*/||' "target/aarch64-unknown-linux-gnu/optimized/qwert"
            tar -czf "qwert-${{ github.event.release.tag_name }}-armv7-linux-gnueabihf.tar.gz" --transform 's|.*/||' "target/armv7-unknown-linux-gnueabihf/optimized/qwert"
            tar -czf "qwert-${{ github.event.release.tag_name }}-x86_64-linux-gnu.tar.gz" --transform 's|.*/||' "target/x86_64-unknown-linux-gnu/optimized/qwert"
            ls -alh
        - name: build macos
          if: contains(matrix.os, 'macos')
          run: |
            cargo build --profile optimized --locked
            ls -alh target